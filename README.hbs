<!-- DO NOT EDIT README.md (It will be overridden by README.hbs) -->

# fix-set

Lets you define prefix and suffix rules to test strings against.

# Description

`fix-set` module lets you define simple prefix, suffix and exception rules and test strings against those rules.

Possible use cases:

* Filter query parameters from a web form.
* Filter custom HTTP header fields.

# Synopsis
```js
import FixSet from 'fix-set';
import type { FixSetRuleConfig } from 'fix-set';  // Flow only
```

--------------

```js
  // Convert parameter names starting with 'q'
  // to database field names replacing 'q' prefix.
  const fixSet = new FixSet({
    include: {
      prefixes:       'q',
      exceptPrefixes: 'qX',
      replacePrefix:  true,
      replaceSuffix:  true
    }
  });

  // Usage with Array#filter, Array#map etc.
  const parameters = formParameters.filter(param => fixSet.has(param));
  const dbFields   = formParameters
    .map(param => fixSet.getName(param))
    .filter(field => field !== undefined);
```

```js
  // Cover all strings starting with 'q' or 'r'.
  const fixSet = new FixSet({
    include: {
      prefixes:      ['q', 'r'],
      replacePrefix: true,
      replaceSuffix: true
    }
  });
  const name = fixSet.getName('qMemberName');   // 'MemberName'
  const has  = fixSet.has('qMemberName');       // true
```

```js
  // Cover all strings starting with 'q' but not 'qX'
  const fixSet = new FixSet({
    include: {
      prefixes:       'q',
      exceptPrefixes: 'qx',
      replacePrefix:  true,
      replaceSuffix:  true
    }
  });

  const name       = fixSet.getName('qMemberName');   // 'MemberName'
  const has        = fixSet.has('qMemberName');       // true
  const otherField = fixSet.getName('qxOther');       // undefined
  const otherHas   = fixSet.has('qxOther');           // false
```

```js
  // Cover all strings excluding which start with 'q'.
  // However include strings starting 'qX' even they start with 'q'.
  const fixSet = new FixSet({
    exclude: {
      prefixes:       'q',
      exceptPrefixes: 'qX',
      replacePrefix:  true,
      replaceSuffix:  true
    }
  });

  const name       = fixSet.getName('qMemberName');   // undefined
  const has        = fixSet.has('qMemberName');       // false
  const otherField = fixSet.getName('qxOther');       // Other
  const otherHas   = fixSet.has('qxOther');           // true
```

# API
{{>main~}}
